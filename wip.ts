/* prettier-ignore-start */

/* eslint-disable unicorn/no-abusive-eslint-disable */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as ProblemsProblemIdRouteImport } from "./routes/problems/$problemId/route"
<<<<<<< HEAD:wip.ts
import { Route as AdminProblemsKannriImport } from "./routes/admin/problems/kannri"
=======
import { Route as AdminSubmissionsSubmissionIdRouteImport } from "./routes/admin/submissions/$submissionId/route"
import { Route as AdminProblemsProblemIdIndexImport } from "./routes/admin/problems/$problemId/index"
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")()
const ProblemsIndexLazyImport = createFileRoute("/problems/")()
const AdminSubmissionsIndexLazyImport = createFileRoute("/admin/submissions/")()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route))

const ProblemsIndexLazyRoute = ProblemsIndexLazyImport.update({
  id: "/problems/",
  path: "/problems/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/problems/index.lazy").then((d) => d.Route),
)

const ProblemsProblemIdRouteRoute = ProblemsProblemIdRouteImport.update({
  id: "/problems/$problemId",
  path: "/problems/$problemId",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/problems/$problemId/route.lazy").then((d) => d.Route),
)

<<<<<<< HEAD:wip.ts
const AdminProblemsKannriRoute = AdminProblemsKannriImport.update({
  id: "/admin/problems/kannri",
  path: "/admin/problems/kannri",
  getParentRoute: () => rootRoute,
} as any)
=======
const AdminSubmissionsIndexLazyRoute = AdminSubmissionsIndexLazyImport.update({
  id: "/admin/submissions/",
  path: "/admin/submissions/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/admin/submissions/index.lazy").then((d) => d.Route),
)

const AdminSubmissionsSubmissionIdRouteRoute =
  AdminSubmissionsSubmissionIdRouteImport.update({
    id: "/admin/submissions/$submissionId",
    path: "/admin/submissions/$submissionId",
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import("./routes/admin/submissions/$submissionId/route.lazy").then(
      (d) => d.Route,
    ),
  )

const AdminProblemsProblemIdIndexRoute =
  AdminProblemsProblemIdIndexImport.update({
    id: "/admin/problems/$problemId/",
    path: "/admin/problems/$problemId/",
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import("./routes/admin/problems/$problemId/index.lazy").then(
      (d) => d.Route,
    ),
  )
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/problems/$problemId": {
      id: "/problems/$problemId"
      path: "/problems/$problemId"
      fullPath: "/problems/$problemId"
      preLoaderRoute: typeof ProblemsProblemIdRouteImport
      parentRoute: typeof rootRoute
    }
    "/problems/": {
      id: "/problems/"
      path: "/problems"
      fullPath: "/problems"
      preLoaderRoute: typeof ProblemsIndexLazyImport
      parentRoute: typeof rootRoute
    }
<<<<<<< HEAD:wip.ts
    "/admin/problems/kannri": {
      id: "/admin/problems/kannri"
      path: "/admin/problems/kannri"
      fullPath: "/admin/problems/kannri"
      preLoaderRoute: typeof AdminProblemsKannriImport
=======
    "/admin/submissions/$submissionId": {
      id: "/admin/submissions/$submissionId"
      path: "/admin/submissions/$submissionId"
      fullPath: "/admin/submissions/$submissionId"
      preLoaderRoute: typeof AdminSubmissionsSubmissionIdRouteImport
      parentRoute: typeof rootRoute
    }
    "/admin/submissions/": {
      id: "/admin/submissions/"
      path: "/admin/submissions"
      fullPath: "/admin/submissions"
      preLoaderRoute: typeof AdminSubmissionsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/admin/problems/$problemId/": {
      id: "/admin/problems/$problemId/"
      path: "/admin/problems/$problemId"
      fullPath: "/admin/problems/$problemId"
      preLoaderRoute: typeof AdminProblemsProblemIdIndexImport
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute
  "/problems/$problemId": typeof ProblemsProblemIdRouteRoute
  "/problems": typeof ProblemsIndexLazyRoute
<<<<<<< HEAD:wip.ts
  "/admin/problems/kannri": typeof AdminProblemsKannriRoute
=======
  "/admin/submissions/$submissionId": typeof AdminSubmissionsSubmissionIdRouteRoute
  "/admin/submissions": typeof AdminSubmissionsIndexLazyRoute
  "/admin/problems/$problemId": typeof AdminProblemsProblemIdIndexRoute
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute
  "/problems/$problemId": typeof ProblemsProblemIdRouteRoute
  "/problems": typeof ProblemsIndexLazyRoute
<<<<<<< HEAD:wip.ts
  "/admin/problems/kannri": typeof AdminProblemsKannriRoute
=======
  "/admin/submissions/$submissionId": typeof AdminSubmissionsSubmissionIdRouteRoute
  "/admin/submissions": typeof AdminSubmissionsIndexLazyRoute
  "/admin/problems/$problemId": typeof AdminProblemsProblemIdIndexRoute
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexLazyRoute
  "/problems/$problemId": typeof ProblemsProblemIdRouteRoute
  "/problems/": typeof ProblemsIndexLazyRoute
<<<<<<< HEAD:wip.ts
  "/admin/problems/kannri": typeof AdminProblemsKannriRoute
=======
  "/admin/submissions/$submissionId": typeof AdminSubmissionsSubmissionIdRouteRoute
  "/admin/submissions/": typeof AdminSubmissionsIndexLazyRoute
  "/admin/problems/$problemId/": typeof AdminProblemsProblemIdIndexRoute
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/problems/$problemId"
    | "/problems"
<<<<<<< HEAD:wip.ts
    | "/admin/problems/kannri"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/problems/$problemId" | "/problems" | "/admin/problems/kannri"
=======
    | "/admin/submissions/$submissionId"
    | "/admin/submissions"
    | "/admin/problems/$problemId"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/problems/$problemId"
    | "/problems"
    | "/admin/submissions/$submissionId"
    | "/admin/submissions"
    | "/admin/problems/$problemId"
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
  id:
    | "__root__"
    | "/"
    | "/problems/$problemId"
    | "/problems/"
<<<<<<< HEAD:wip.ts
    | "/admin/problems/kannri"
=======
    | "/admin/submissions/$submissionId"
    | "/admin/submissions/"
    | "/admin/problems/$problemId/"
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ProblemsProblemIdRouteRoute: typeof ProblemsProblemIdRouteRoute
  ProblemsIndexLazyRoute: typeof ProblemsIndexLazyRoute
<<<<<<< HEAD:wip.ts
  AdminProblemsKannriRoute: typeof AdminProblemsKannriRoute
=======
  AdminSubmissionsSubmissionIdRouteRoute: typeof AdminSubmissionsSubmissionIdRouteRoute
  AdminSubmissionsIndexLazyRoute: typeof AdminSubmissionsIndexLazyRoute
  AdminProblemsProblemIdIndexRoute: typeof AdminProblemsProblemIdIndexRoute
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ProblemsProblemIdRouteRoute: ProblemsProblemIdRouteRoute,
  ProblemsIndexLazyRoute: ProblemsIndexLazyRoute,
<<<<<<< HEAD:wip.ts
  AdminProblemsKannriRoute: AdminProblemsKannriRoute,
=======
  AdminSubmissionsSubmissionIdRouteRoute:
    AdminSubmissionsSubmissionIdRouteRoute,
  AdminSubmissionsIndexLazyRoute: AdminSubmissionsIndexLazyRoute,
  AdminProblemsProblemIdIndexRoute: AdminProblemsProblemIdIndexRoute,
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/problems/$problemId",
        "/problems/",
<<<<<<< HEAD:wip.ts
        "/admin/problems/kannri"
=======
        "/admin/submissions/$submissionId",
        "/admin/submissions/",
        "/admin/problems/$problemId/"
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/problems/$problemId": {
      "filePath": "problems/$problemId/route.tsx"
    },
    "/problems/": {
      "filePath": "problems/index.lazy.tsx"
    },
<<<<<<< HEAD:wip.ts
    "/admin/problems/kannri": {
      "filePath": "admin/problems/kannri.tsx"
=======
    "/admin/submissions/$submissionId": {
      "filePath": "admin/submissions/$submissionId/route.tsx"
    },
    "/admin/submissions/": {
      "filePath": "admin/submissions/index.lazy.tsx"
    },
    "/admin/problems/$problemId/": {
      "filePath": "admin/problems/$problemId/index.tsx"
>>>>>>> ef2fac43b837d6020f28478ab3ec5812a8a39438:frontend/src/route-tree.gen.ts
    }
  }
}
ROUTE_MANIFEST_END */
